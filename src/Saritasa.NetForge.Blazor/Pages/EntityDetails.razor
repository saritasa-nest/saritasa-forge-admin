@using Saritasa.NetForge.Blazor.Controls
@using Saritasa.NetForge.Blazor.Domain.Entities.Options
@using Saritasa.NetForge.Blazor.Extensions
@using Saritasa.NetForge.Blazor.MVVM.ViewModels.EntityDetails

@inject AdminOptions AdminOptions
@inherits Saritasa.NetForge.Blazor.Pages.MvvmComponentBase<EntityDetailsViewModel>

@if (ViewModel.IsEntityExists)
{
    <PageTitle>@ViewModel.Model.PluralName</PageTitle>
    <MudBreadcrumbs Items="breadcrumbItems"></MudBreadcrumbs>
    <MudGrid>
        <MudItem xs="12">
            <MudText Typo="Typo.h4">@ViewModel.Model.PluralName</MudText>
            <MudText Typo="Typo.body1">@ViewModel.Model.Description</MudText>
        </MudItem>

        @if (ViewModel.CanAdd)
        {
            <MudItem xs="12">
                <MudButton Variant="Variant.Outlined" OnClick="@NavigateToCreation">
                    Add @ViewModel.Model.DisplayName.ToMeaningfulName()
                </MudButton>
            </MudItem>
        }

        @if (ViewModel.CanDelete)
        {
            <MudItem xs="12">
                <MudButton Variant="Variant.Outlined" Color="Color.Secondary"
                           OnClick="ShowBulkDeleteEntitiesConfirmationAsync"
                           Disabled="!ViewModel.SelectedEntities.Any()">
                    Bulk Delete
                </MudButton>
            </MudItem>
        }

        @if (ViewModel.IsDisplaySearchInput)
        {
            const int debounceInterval = 250;
            <MudItem xs="6">
                <MudTextField T="string"
                              @bind-Value="ViewModel.SearchString"
                              Placeholder="Search"
                              Immediate="true"
                              Adornment="Adornment.Start"
                              AdornmentIcon="@Icons.Material.Filled.Search"
                              IconSize="Size.Medium"
                              DebounceInterval="debounceInterval"
                              OnDebounceIntervalElapsed="ViewModel.Search" />
            </MudItem>
        }

        @if (!ViewModel.HasProperties)
        {
            <MudItem xs="12">
                <MudText Typo="Typo.body1">This entity doesn't have configured properties to display.</MudText>
            </MudItem>
        }

        @if (ViewModel.HasProperties)
        {
            <MudItem xs="12">
                <MudDataGrid T="object" ServerData="ViewModel.LoadEntityGridDataAsync" DragDropColumnReordering="true"
                             MultiSelection="true" @bind-SelectedItems="ViewModel.SelectedEntities"
                             @ref="ViewModel.DataGrid" SortMode="SortMode.Multiple"
                             @attributes="NonKeylessEntityDataGridAttributes">
                    <Columns>
                        <EntityPropertyColumns Properties="ViewModel.Model.Properties"
                                               DataGrid="ViewModel.DataGrid"
                                               CanDelete="ViewModel.CanDelete"/>
                    </Columns>

                    <PagerContent>
                        <MudDataGridPager T="object"/>
                    </PagerContent>
                </MudDataGrid>
            </MudItem>
        }
    </MudGrid>
}
else
{
    <NotFound/>
}
