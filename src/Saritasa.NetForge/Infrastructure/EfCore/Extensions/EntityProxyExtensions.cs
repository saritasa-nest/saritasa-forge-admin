namespace Saritasa.NetForge.Infrastructure.EfCore.Extensions;

/// <summary>
/// Contains extension methods for entity proxies.
/// </summary>
public static class EntityProxyExtensions
{
    private const string CastleProxiesNamespace = "Castle.Proxies";

    /// <summary>
    /// Checks if the given type is a lazy loading proxy.
    /// </summary>
    /// <param name="type">The type to check.</param>
    /// <returns>True if the type is a lazy loading proxy, otherwise false.</returns>
    public static bool IsLazyLoadingProxy(this Type type)
    {
        var baseType = type.BaseType;

        // Check if the type is a proxy type generated by EF Core for lazy loading.
        return baseType != null && type.Namespace == CastleProxiesNamespace;
    }

    /// <summary>
    /// Gets the POCO type of the entity.
    /// </summary>
    /// <param name="entity">Entity instance.</param>
    /// <returns>The POCO type if the entity is a lazy loading proxy.</returns>
    /// <exception cref="InvalidOperationException">Throws if the provided entity is not a lazy loading proxy.</exception>
    public static Type GetPocoType(this object entity)
    {
        var entityType = entity.GetType();

        if (!entityType.IsLazyLoadingProxy())
        {
            throw new InvalidOperationException($"The provided entity of type {entityType.Name} is not a lazy loading proxy.");
        }

        return entityType.BaseType!;
    }
}
